data2019 %>% select(Store.Number) %>%
filter(is.na(Store.Number)) %>% dnrow()
data2019 %>% select(Store.Number) %>%
filter(is.na(Store.Number)) %>% nrow()
data2019 %>% select(Vendor.Number) %>%
filter(is.na(Vendor.Number)) %>% nrow()
### Change duplicated Store, Vendor Names
test <- data2019 %>%
mutate(Store.Name = ifelse(Store.Number %in% check_store$Store.Number,
check_store$Store.Name[check_store$Store.Number == Store.Number], Store.Name, na.rm = TRUE)) %>%
mutate(Vendor.Name = ifelse(Vendor.Number %in% check_vendor$Vendor.Number,
check_vendor$Vendor.Name[check_vendor$Vendor.Number == Vendor.Number], Vendor.Name, , na.rm = TRUE))
### Change duplicated Store, Vendor Names
test <- data2019 %>%
mutate(Store.Name = ifelse(Store.Number %in% check_store$Store.Number,
check_store$Store.Name[check_store$Store.Number == Store.Number], Store.Name, na.rm = TRUE)) %>%
mutate(Vendor.Name = ifelse(Vendor.Number %in% check_vendor$Vendor.Number,
check_vendor$Vendor.Name[check_vendor$Vendor.Number == Vendor.Number], Vendor.Name, na.rm = TRUE))
### Change duplicated Store, Vendor Names
test <- data2019 %>%
mutate(Store.Name = ifelse(Store.Number %in% check_store$Store.Number,
check_store$Store.Name[check_store$Store.Number == Store.Number], Store.Name)) %>%
mutate(Vendor.Name = ifelse(Vendor.Number %in% check_vendor$Vendor.Number,
check_vendor$Vendor.Name[check_vendor$Vendor.Number == Vendor.Number], Vendor.Name, na.rm = TRUE))
data2019 %>% select(Store.Number) %>%
filter(is.na(Store.Number)) %>%
unique() %>% nrow()
data2019 %>% select(Store.Number) %>%
filter(!is.na(Store.Number)) %>%
unique() %>% nrow()
test <- date2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y)
test <- data2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y)
### count
test %>%
select(Store.Number, Store.Name) %>% unique() %>% View() #2656
### count
test %>%
select(Store.Number, Store.Name) %>% unique() %>% nrow() #2656
test <- data2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y) %>%
left_join(check_vendor, by = "Store.Vendor") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.y)
test <- data2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.y)
test %>%
select(Vendor.Number, Vendor.Name) %>% unique() %>% nrow() #398
### Normalization Check
# Store -> Need Check
data2019 %>%
select(Store.Number) %>% unique() %>% nrow() #2465
### count
test %>%
select(Store.Number, Store.Name) %>% unique() %>% nrow() #2466
test %>% select(Store.Number) %>% filter(is.na(Store.Number)) %>% nrow()
test <- data2019 %>%
mutate(Store.Number = ifelse(Store.Number == 2190, 4829, Store.Number))
### Change duplicated Store, Vendor Names
test <- test %>%
mutate(Store.Name = ifelse(Store.Number %in% check_store$Store.Number,
check_store$Store.Name[check_store$Store.Number == Store.Number], Store.Name)) %>%
mutate(Vendor.Name = ifelse(Vendor.Number %in% check_vendor$Vendor.Number,
check_vendor$Vendor.Name[check_vendor$Vendor.Number == Vendor.Number], Vendor.Name, na.rm = TRUE))
test <- data2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.y)
test <- test %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.y)
### count
test %>%
select(Store.Number, Store.Name) %>% unique() %>% nrow() #2466
data2019 %>% filter(Store.Number == 2190) %>% nrow()
test %>% filter(Store.Number == 2190) %>% nrow()
test <- data2019 %>%
mutate(Store.Number = ifelse(Store.Number == 2190, 4829, Store.Number))
test %>% filter(Store.Number == 2190) %>% nrow()
test <- test %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.y)
### count
test %>% names()
test <- test %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.x, -Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.x, -Vendor.Name.y) %>%
select(-check.x, -check.y)
### count
test %>% names()
test <- data2019 %>%
mutate(Store.Number = ifelse(Store.Number == 2190, 4829, Store.Number))
test <- test %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.x, -Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.x, -Vendor.Name.y) %>%
select(-check.x, -check.y)
### count
test %>% names()
test %>%
select(Store.Number, Store.Name) %>% unique() %>% nrow() #2466
data2019 <- data2019 %>%
mutate(Store.Number = ifelse(Store.Number == 2190, 4829, Store.Number))
### Change duplicated Store, Vendor Names
data2019 <- data2019 %>%
left_join(check_store, by = "Store.Number") %>%
mutate(Store.Name = ifelse(!is.na(Store.Name.y), Store.Name.y, Store.Name.x)) %>%
select(-Store.Name.x, -Store.Name.y) %>%
left_join(check_vendor, by = "Vendor.Number") %>%
mutate(Vendor.Name = ifelse(!is.na(Vendor.Name.y), Vendor.Name.y, Vendor.Name.x)) %>%
select(-Vendor.Name.x, -Vendor.Name.y) %>%
select(-check.x, -check.y)
### count
data2019 %>% names()
data2019 %>%
select(Store.Number, Store.Name) %>% unique() %>% nrow() #2464
data2019 %>%
select(Vendor.Number, Vendor.Name) %>% unique() %>% nrow() #398
save.image("C:/Users/User/Desktop/R_Data/R_data/Iowa/Data/CHECK POINT2.RData")
str(data2019)
## Normalization
### Create Store
data2019 %>%
select(Store.Number, Store.Name, Address, City, Zip.Code, Store.Location) %>%
unique() %>% nrow()
### Create Country
data2019 %>%
select(County.Number, County) %>%
unique() %>% nrow()
### Create Vendor
data2019 %>%
select(Vendor.Number, Vendor.Name) %>%
unique() %>% nrow()
### Create Item
data2019 %>%
select(Item.Number, Item.Description)
### Create Item
data2019 %>%
select(Item.Number, Item.Description) %>% unique() %>% nrow()
data2019 %>%
select(Item.Number) %>%
arrange(-Item.Number) %>% head(10)
data2019 %>%
select(Item.Number) %>%
arrange(desc(Item.Number)) %>% head(10)
data2019 %>%
select(Item.Number) %>%
arrange(Item.Number) %>% head(10)
data2019 %>%
mutate(Item.Number = as.integer(Item.Number)) %>%
str()
data2019 <- data2019 %>%
mutate(Item.Number = as.integer(Item.Number))
### Create Item
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>% nrow() #9858
load("C:/Users/User/Desktop/R_Data/R_data/Iowa/Data/CHECK POINT2.RData")
library(googlesheets4)
library(tidyverse)
library(dplyr)
library(lubridate)
library(stringr)
# -----------------------------------------------------------------------------------
# Account Verification
# -----------------------------------------------------------------------------------
gs4_auth()
wdir <- 'https://docs.google.com/spreadsheets/d/1a1rbVgVJp6n6xd8r7Qxu1WTwo-9n1cnzd_7lk7FX6fM/'
### Data;
setwd("./Data")
### Create Country
data2019 %>%
select(County.Number, County) %>%
unique() %>% nrow() #199 <-- NEED CHECK
### Create Country
data2019 %>% select(County.Number) %>% unique() %>% nrow()
data2019 %>% select(County) %>% unique() %>% nrow()
data2019 %>%
select(County.Number, County) %>%
filter(County.Number == 1) %>% unique()
data2019 %>%
select(County.Number, County) %>%
filter(County.Number == 90) %>% unique()
data2019 %>%
select(County.Number, County) %>%
filter(County == 'WAPELLO') %>% unique()
data2019 %>%
select(County.Number, County) %>%
filter(!is.na(County.Number)) %>%
unique() %>% nrow()
County_inds <-
data2019 %>%
select(County.Number, County) %>%
filter(!is.na(County.Number)) %>%
unique() %>% View()
County_inds <-
data2019 %>%
select(County.Number, County) %>%
filter(!is.na(County.Number)) %>%
unique() %>%
arrange(County.Number)
inds_county <-
data2019 %>%
select(County.Number, County) %>%
filter(!is.na(County.Number)) %>%
unique() %>%
arrange(County.Number)
rm(County_inds)
### Create Vendor
data2019 %>%
select(Vendor.Number, Vendor.Name) %>%
unique() %>% nrow() #368
data2019 %>%
select(Vendor.Number) %>% unique() %>% nrow()
data2019 %>%
select(Item.Number) %>% unique()
data2019 %>%
select(Item.Number) %>% unique() %>% nrow()
data2019 %>%
select(Item.Number, Item.Description) %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>% nrow()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>% nrow()
?table
?table()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>% table()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
select(Item.Number, n) %>% table()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
select(n) %>% table()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
filter(n > 1) %>%
table(n)
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
table(n)
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
table()
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
summary(n)
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
group_by(n) %>%
mutate(n2 = n()) %>%
table(n2)
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()) %>%
group_by(n) %>%
mutate(n2 = n())
table(data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(n = n()))
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
summarise(n = n())
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
group_by(cnt) %>%
summarise(n=n())
check_item <- data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
select(n, Item.Number, Item.Description)
out.sheet <- gs4_get(wdir)
check_item %>%
sheet_write(out.sheet, sheet = 'Check_item')
check_item <- data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
select(cnt, Item.Number, Item.Description)
check_item %>%
sheet_write(out.sheet, sheet = 'Check_item')
check_item %>%
filter(n > 1) %>%
sheet_write(out.sheet, sheet = 'Check_item')
check_item %>%
filter(cnt > 1) %>%
sheet_write(out.sheet, sheet = 'Check_item')
library(multilinguer)
install.packages("multilinguer", "KoNLP")
install.packages("multilinguer")
library(multilinguer)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
check_item %>% head() %>%
mutate(Description2 = str_replace_all(Item.Description,"/^[a-zA-Z0-9]*$/"," "))
check_item %>% head() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]*$",""))
check_item %>% head() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]",""))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]",""))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/d{1}YR/", "YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/\dYR/", "YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/\d{1}YR/", "YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/'\d{1}YR/", "YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/[0-9]YR/", "YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "/[0-9]YR/", "[0-9]YEAR"))
check_item %>% tail(30) %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR"))
check_item2 <- check_item %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
unique() %>%
select(Item.Number, Description2) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
select(cnt, Item.Number, Item.Description, Description2)
check_item2 <- check_item %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
unique() %>%
select(Item.Number, Description2) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
select(cnt, Item.Number, Description2)
check_item2 %>%
filter(cnt > 1) %>%
sheet_write(out.sheet, sheet = 'Check_item')
check_item %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
unique() %>%
select(Item.Number, Description2) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
group_by(cnt) %>%
summarise(n=n())
data2019 %>%
select(Item.Number, Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
group_by(cnt) %>%
summarise(n=n())
check_item2 <- check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
select(cnt, Item.Number, Item.Description, Description2)
check_item2 %>%
filter(cnt > 1) %>%
sheet_write(out.sheet, sheet = 'Check_item')
check_item2 <- check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(Item.Number, Description2) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
left_join(check_item %>% select(Item.Number, Item.Description))
check_item2 <- check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(Item.Number, Description2) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
arrange(cnt, Item.Number) %>%
left_join(check_item %>% select(Item.Number, Item.Description), by="Item.Number")
check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(Item.Number, Description2) %>%
unique() %>% names()
check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(Item.Number, Description2) %>%
unique() %>%
left_join(check_item %>% select(Item.Number, Item.Description), by="Item.Number") %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>% head()
check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(-Item.Description) %>%
unique() %>%
select(-Description2) %>%
left_join(check_item %>% select(Item.Number, Item.Description), by="Item.Number") %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>% head()
check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(-Item.Description) %>% head()
check_item %>%
select(Item.Number, Item.Description) %>% unique() %>%
mutate(Description2 = str_replace_all(Item.Description,"[^a-zA-Z0-9]","")) %>%
mutate(Description2 = str_replace_all(Description2, "YR", "YEAR")) %>%
select(-Item.Description) %>%
unique() %>%
group_by(Item.Number) %>%
mutate(cnt = n()) %>%
select(-Description2) %>%
left_join(check_item %>% select(Item.Number, Item.Description), by="Item.Number") %>%
head()
